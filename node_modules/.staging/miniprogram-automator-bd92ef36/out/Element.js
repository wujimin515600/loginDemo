"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const isStr_1=__importDefault(require("licia/isStr")),sleep_1=__importDefault(require("licia/sleep"));class Element{constructor(t,e,a){this.tagName="",this.connection=t,this.id=e.id,this.pageId=e.pageId,this.tagName=e.tagName,this.elementMap=a}async $(t){try{const{elementId:e,tagName:a}=await this.send("Element.getElement",{selector:t});return Element.create(this.connection,{id:e,pageId:this.pageId,tagName:a},this.elementMap)}catch(t){return null}}async $$(t){const{elements:e}=await this.send("Element.getElements",{selector:t});return e.map(t=>Element.create(this.connection,{id:t.elementId,pageId:this.pageId,tagName:t.tagName},this.elementMap))}async size(){const[t,e]=await this.domProperty(["offsetWidth","offsetHeight"]);return{width:t,height:e}}async offset(){return await this.send("Element.getOffset")}async text(){return await this.domProperty("innerText")}async attribute(t){if(!isStr_1.default(t))throw Error("name must be a string");return await this.getter(t,"getAttributes","attributes")}async wxml(){return(await this.send("Element.getWXML",{type:"inner"})).wxml}async outerWxml(){return(await this.send("Element.getWXML",{type:"outer"})).wxml}async value(){return await this.property("value")}async style(t){if(!isStr_1.default(t))throw Error("name must be a string");return await this.getter(t,"getStyles","styles")}async tap(){await this.send("Element.tap")}async longpress(){await this.touchstart(),await sleep_1.default(350),await this.touchend()}async trigger(t,e){const a={type:t};e&&(a.detail=e),await this.send("Element.triggerEvent",a)}async touchstart(){await this.send("Element.touchstart")}async touchend(){await this.send("Element.touchend")}async domProperty(t){return await this.getter(t,"getDOMProperties","properties")}async property(t){return await this.getter(t,"getProperties","properties")}async getter(t,e,a){let s;s=isStr_1.default(t)?[t=t]:t=t;const n=(await this.send(`Element.${e}`,{names:s}))[a];return isStr_1.default(t)?n[0]:n}async send(t,e={}){return e.elementId=this.id,e.pageId=this.pageId,await this.connection.send(t,e)}static create(t,e,a){if(a.get(e.id))return a.get(e.id);const s=new Element(t,e,a);return a.set(e.id,s),s}}exports.default=Element;